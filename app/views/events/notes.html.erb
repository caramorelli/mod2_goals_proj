<!-- Views

SimpleCalendar just accepts an array of events and a block. The block will be executed for each event so you can provide your own logic for displaying the events.

Here's an example that uses SimpleCalendar to simply render a link to each event on its own line inside the table. You would simply query for the @events as discussed above in the querying section. -->

<%= calendar @events do |event| %>
  <div><%= link_to event.title, event %></div>
<% end %>

<!-- When the calendar is rendering, it yields to the block to allow you to render whatever you like for the item. In this example, I use the title attribute on the event with a link to the event.

You may even pass options to calendar renderer to customize it's behavior -->

<%= calendar @events, {:prev_text=>"prev", :next_text=>"next"} do |event| %>
  <div><%= link_to event.title, event %></div>
<% end %>

<!-- This time calendar will use prev and next as labels for previous and next month links (which are normally set to &laquo; («) and &raquo; (»)

Possible options: -->

<!-- :year            # current year, default: from params or current year
:month           # current month, default: from params or current month
:prev_text       # previous month link text, default: &laquo;
:next_text       # next month link text, default: &raquo;
:start_day       # starting day of week, default: :sunday
:empty_date      # block called when a date is empty
:class           # HTML class attribute for the calendar
:params          # Any extra params you'd like in the URL (automatically includes month and year)
:dont_display_year #Set to true to remove the year in the table header -->

<!-- If you wish to have Monday as the first day of the week, you'll need to change a couple things. First, when rendering the calendar, use the :start_day => :monday option like so: -->

<%= calendar @events, :start_day => :monday do |event| %>
  <%= link_to event.title, event %>
<% end %>

<!-- And the second step is to make sure you've set your I18n.locale to the correct one. There is a lot of information here regarding use of locales in Rails: https://github.com/svenfuchs/rails-i18n

The empty_date option accepts a block that will be called when a day in the calendar is empty. It will be called with the date object that represents the day that has no events. -->

<%= calendar @events, empty_date: lambda{ |date| "hello from #{date}" } do |event| %>
    <%= event.name %>
  <% end %>

<!--  The not_empty_date option accepts a block that will be called when a day in the calendar has at least one event. It will be called with the date object that represents the day that has some events. -->

<%= calendar @events, not_empty_date: lambda{ |date| "hello from #{date}" } do |event| %>
   <%= event.name %>
 <% end %>

 <!-- CSS
You will probably want to customize the height of the calendar so that all the rows are the same heights and widths. You can do this by adding the following line to your css:

.calendar td { height: 100px; width: 14.28%; }
By default simple_calendar will set the calendar to use .table .table-bordered .table-striped and .calendar classes.

You can also override the class by passing in the class option. -->

  <%= calendar @events, class: "simple-calendar" do |event| %>
  <% end %>
